name: CI/CD for Testing

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Step 1: Run All API Tests
  run-api-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Maven Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven

      - name: Install Dependencies
        run: mvn install --no-transfer-progress

      - name: Run All API Tests
        run: mvn test -DfailIfNoTests=true

      - name: Parse Test Results
        id: api-test-summary
        run: |
          mkdir -p summary
          grep -E "Tests run:.*Failures:.*Errors:.*Skipped:.*" target/surefire-reports/*.txt > summary/api-test-summary.txt

      - name: Upload Test Results
        uses: actions/upload-artifact@v3
        with:
          name: api-test-results
          path: target/surefire-reports/

  # Step 2: Run All UI Tests (Depends on API Tests)
  run-ui-tests:
    runs-on: ubuntu-latest
    needs: run-api-tests  # Ensures UI tests run only after API tests complete

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Maven Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven

      - name: Install Dependencies
        run: mvn install --no-transfer-progress

      - name: Run All UI Tests
        run: mvn test -DfailIfNoTests=true

      - name: Parse Test Results
        id: ui-test-summary
        run: |
          mkdir -p summary
          grep -E "Tests run:.*Failures:.*Errors:.*Skipped:.*" target/surefire-reports/*.txt > summary/ui-test-summary.txt

      - name: Upload Test Results
        uses: actions/upload-artifact@v3
        with:
          name: ui-test-results
          path: target/surefire-reports/

  # Step 3: Notify on Failure with Detailed Report
  notify-on-failure:
    runs-on: ubuntu-latest
    needs:
      - run-api-tests
      - run-ui-tests  # Ensures notification runs only after both jobs
    if: failure()  # Trigger only if one of the jobs failed

    steps:
      - name: Collect Test Summaries
        run: |
          mkdir -p summary
          cat run-api-tests/summary/api-test-summary.txt > summary/combined-summary.txt || true
          cat run-ui-tests/summary/ui-test-summary.txt >> summary/combined-summary.txt || true

      - name: Send Email Notification
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "Test Failure in CI/CD Pipeline"
          to: sasitharanvaratharasa887@gmail.com
          body: |
            Hello,

            The CI/CD pipeline encountered test failures. Below is the test summary:

            $(cat summary/combined-summary.txt)

            Please review the logs and take necessary action.

            Best regards,
            CI/CD Pipeline
