name: CI/CD for Testing

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Step 1: Run All API Tests
  run-api-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Maven Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven

      - name: Install Dependencies
        run: mvn install --no-transfer-progress

      - name: Run All API Tests
        run: mvn test -Dmaven.test.failure.ignore=false

      - name: Install Allure CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y allure

      - name: Generate Allure Report
        run: |
          allure generate target/allure-results --clean -o target/allure-report

      - name: Compress Allure Report
        run: zip -r allure-report.zip target/allure-report

  # Step 2: Run All UI Tests (Depends on API Tests)
  run-ui-tests:
    runs-on: ubuntu-latest
    needs: run-api-tests

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Maven Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven

      - name: Install Dependencies
        run: mvn install --no-transfer-progress

      - name: Run All UI Tests
        run: mvn test -Dmaven.test.failure.ignore=false

      - name: Install Allure CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y allure

      - name: Generate Allure Report
        run: |
          allure generate target/allure-results --clean -o target/allure-report

      - name: Compress Allure Report
        run: zip -r allure-report.zip target/allure-report

  # Step 3: Notify on Failure or Success
  notify-on-failure-or-success:
    runs-on: ubuntu-latest
    needs:
      - run-api-tests
      - run-ui-tests
    if: always()

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Send Email Notification
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          from: ${{ secrets.EMAIL_USERNAME }}
          to: sasitharanvaratharasa887@gmail.com
          subject: "Test Results in CI/CD Pipeline"
          body: |
            Hello,

            The CI/CD pipeline has completed its execution.

            Test Results:
            - API Tests Status: ${{ needs.run-api-tests.result }}
            - UI Tests Status: ${{ needs.run-ui-tests.result }}

            Please find the attached Allure report for detailed test results.
          attachments: allure-report.zip
